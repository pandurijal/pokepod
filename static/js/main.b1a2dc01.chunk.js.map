{"version":3,"sources":["Service/index.js","Components/SkeletonList.js","Components/NavBar.js","Components/Footer.js","Routes/index.js","Pages/MainPage.js","Pages/DetailPage.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","pokeListService","limit","offset","url","concat","fetch","headers","Content-Type","Accept","then","res","json","pokeDetailService","pokeName","SkeletonList","props","length","react_default","a","createElement","Fragment","className","NavBar","react_router_dom","to","title","children","Footer","routes","path","component","MainPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchData","asyncToGenerator","regenerator_default","mark","_callee","_this$state","pokeList","listParams","wrap","_context","prev","next","setState","isLoading","state","sent","toConsumableArray","results","t0","console","error","isLoaded","stop","fetchOnScroll","objectSpread","_this$state2","map","list","key","name","src","alt","SkeletonList_SkeletonList","es","onEnter","Component","exact","DetailPage","match","params","log","pokeData","sprites","stats","front_default","id","stat","style","width","base_stat","App","basename","NavBar_NavBar","react_router","route","Footer_Footer","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1a2dc01.chunk.js","sourcesContent":["const BASE_URL = 'https://pokeapi.co/api/v2';\n\nexport const pokeListService = (limit, offset) => {\n  const url = `${BASE_URL}/pokemon?limit=${limit}&offset=${offset}`;\n  const get = fetch(url, {\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    }\n  }).then(res => res.json());\n  return get;\n};\n\nexport const pokeDetailService = pokeName => {\n  const url = `${BASE_URL}/pokemon/${pokeName}`;\n  const get = fetch(url, {\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    }\n  }).then(res => res.json());\n  return get;\n};\n","import React from 'react';\n\nconst SkeletonList = props => {\n  const { length } = props;\n  return (\n    <>\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n      <div className=\"grid-item__skeleton\" />\n    </>\n  );\n};\n\nexport { SkeletonList };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = props => {\n  return (\n    <nav className=\"app-navbar\">\n      <div className=\"container\">\n        <div className=\"app-title__wrapper\">\n          <Link to=\"/\">\n            <p className=\"app-title\">{props.title}</p>\n          </Link>\n        </div>\n        <div className=\"app-menu__wrapper\">{props.children}</div>\n      </div>\n    </nav>\n  );\n};\n\nexport { NavBar };\n","import React from 'react';\n\nconst Footer = props => {\n  return <footer className=\"app-footer\">{props.children}</footer>;\n};\n\nexport { Footer };\n","import MainPage from '../Pages/MainPage';\nimport DetailPage from '../Pages/DetailPage';\n\nexport const routes = [\n  {\n    path: '/',\n    component: MainPage,\n    exact: true\n  },\n  {\n    path: '/pokemon/:pokeName',\n    component: DetailPage,\n    exact: true\n  }\n];\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Waypoint } from 'react-waypoint';\nimport { pokeListService } from '../Service';\nimport { SkeletonList } from '../Components';\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listParams: {\n        limit: 25,\n        offset: 0\n      },\n      pokeList: [],\n      isLoading: false,\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    this.setState({ isLoading: true });\n    const { pokeList, listParams } = this.state;\n    try {\n      const res = await pokeListService(listParams.limit, listParams.offset);\n      this.setState({\n        pokeList: [...pokeList, ...res.results]\n      });\n    } catch (error) {\n      console.error(error);\n    }\n    this.setState({ isLoading: false, isLoaded: true });\n  };\n\n  fetchOnScroll = () => {\n    const { listParams } = this.state;\n    this.setState({\n      listParams: { ...listParams, offset: listParams.offset + 25 }\n    });\n    this.fetchData();\n  };\n\n  render() {\n    const { listParams, pokeList, isLoading, isLoaded } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"grid-row\">\n          {isLoaded && (\n            <>\n              {pokeList.length > 0 ? (\n                pokeList.map(list => {\n                  return (\n                    <div className=\"grid-item\" key={list.name}>\n                      <Link to={`/pokemon/${list.name}`}>\n                        <div className=\"grid-content\">\n                          <img\n                            src={`http://www.pokestadium.com/sprites/xy/${list.name}.gif`}\n                            alt={list.name}\n                          />\n                          <div\n                            className=\"fav-btn__wrapper\"\n                            // onClick={() => onFavClicked(val.id, srcImg)}\n                          >\n                            <div\n                            // className={`fav-btn ${\n                            //   favorited ? 'favorited' : ''\n                            // }`}\n                            />\n                          </div>\n                        </div>\n                      </Link>\n                    </div>\n                  );\n                })\n              ) : (\n                <div className=\"blank-data__wrapper\">\n                  <p className=\"blank-data\">\n                    Sorry, there was a problem when loading data\n                  </p>\n                </div>\n              )}\n            </>\n          )}\n          {isLoading && <SkeletonList length={listParams.limit} />}\n          {isLoaded && <Waypoint onEnter={this.fetchOnScroll} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from 'react';\nimport { pokeDetailService } from '../Service';\nimport { toUpperCase } from '../Helpers';\n\nclass DetailPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokeData: {\n        sprites: {},\n        stats: []\n      },\n      isLoading: false,\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    this.setState({ isLoading: true });\n    const { pokeName } = this.props.match.params;\n    try {\n      const res = await pokeDetailService(pokeName);\n      console.log({ res });\n      this.setState({\n        pokeData: res\n      });\n    } catch (error) {\n      console.error(error);\n    }\n    this.setState({ isLoading: false, isLoaded: true });\n  };\n\n  render() {\n    const { pokeData } = this.state;\n    return (\n      <div className=\"detail-page\">\n        <div className=\"grid-row\">\n          <div className=\"grid-item grid-item-3\">\n            <img src={pokeData.sprites.front_default} />\n          </div>\n          <div className=\"grid-item grid-item-9\">\n            <div className=\"detail-content\">\n              <p className=\"id\">ID: {pokeData.id}</p>\n              <p className=\"name\">{pokeData.name}</p>\n              <table>\n                <tbody>\n                  {pokeData.stats &&\n                    pokeData.stats.map(stat => {\n                      return (\n                        <tr key={stat.stat.name}>\n                          <td>\n                            <p>{stat.stat.name}</p>\n                          </td>\n                          <td style={{ width: '100%' }}>\n                            <div className=\"bar__bg\">\n                              <div\n                                className=\"bar\"\n                                style={{ width: `${stat.base_stat}%` }}\n                              ></div>\n                            </div>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DetailPage;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { routes } from './Routes';\nimport { NavBar, Footer } from './Components';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Router basename=\"/pokepod/\">\n        <div className=\"App\">\n          <div className=\"container\">\n            <NavBar title=\"PokePod\">\n              <Link to=\"/\">\n                <p className={`app-menu`}>Home</p>\n              </Link>\n              {/* <Link to=\"/fav\">\n                <p className={`app-menu`}>Fav</p>\n              </Link> */}\n            </NavBar>\n            <Switch>\n              {routes.map(route => (\n                <Route\n                  key={route.path}\n                  path={route.path}\n                  component={route.component}\n                  exact={route.exact}\n                />\n              ))}\n            </Switch>\n            <Footer>\n              <p>PokePod | @pandurijal</p>\n            </Footer>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}